{
  "address": "0x8016d124B1C973908791D7Cf73C460F5753BfE5E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_platformFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum BettingContract.BetOutcome",
          "name": "outcome",
          "type": "uint8"
        }
      ],
      "name": "BetAttested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "teamAToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "teamBToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "betToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "statement",
          "type": "string"
        }
      ],
      "name": "BetCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "participant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum BettingContract.BetOutcome",
          "name": "outcome",
          "type": "uint8"
        }
      ],
      "name": "BetParticipated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "participant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeReturned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WinningsClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "approveToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "betCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bets",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "teamAToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "teamBToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "betToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "statement",
          "type": "string"
        },
        {
          "internalType": "enum BettingContract.BetOutcome",
          "name": "outcome",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalPool",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectedPlatformFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_teamAToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_teamBToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_betToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_statement",
          "type": "string"
        }
      ],
      "name": "createBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platformFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "removeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe5d86f3e38cb28b2ff60799da6676d91a1169452e44814f1cc5121b4fe469908",
  "receipt": {
    "to": null,
    "from": "0x110b9E33F54C61487b59A1E24AF9ca83749816cF",
    "contractAddress": "0x8016d124B1C973908791D7Cf73C460F5753BfE5E",
    "transactionIndex": 0,
    "gasUsed": "1055617",
    "logsBloom": "0x
    "blockHash": "0xbe270bfac747247255b83237ea158e7b058d7ad0e190134aee7f211090b367f2",
    "transactionHash": "0xe5d86f3e38cb28b2ff60799da6676d91a1169452e44814f1cc5121b4fe469908",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 17385553,
        "transactionHash": "0xe5d86f3e38cb28b2ff60799da6676d91a1169452e44814f1cc5121b4fe469908",
        "address": "0x0000000000000000000000000000000000007005",
        "topics": [
          "0x33c981baba081f8fd2c52ac6ad1ea95b6814b4376640f55689051f6584729688",
          "0x000000000000000000000000110b9e33f54c61487b59a1e24af9ca83749816cf"
        ],
        "data": "0x0000000000000000000000008016d124b1c973908791d7cf73c460f5753bfe5e",
        "logIndex": 0,
        "blockHash": "0xbe270bfac747247255b83237ea158e7b058d7ad0e190134aee7f211090b367f2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 17385553,
        "transactionHash": "0xe5d86f3e38cb28b2ff60799da6676d91a1169452e44814f1cc5121b4fe469908",
        "address": "0x8016d124B1C973908791D7Cf73C460F5753BfE5E",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000110b9e33f54c61487b59a1e24af9ca83749816cf"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xbe270bfac747247255b83237ea158e7b058d7ad0e190134aee7f211090b367f2"
      }
    ],
    "blockNumber": 17385553,
    "cumulativeGasUsed": "1055617",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x110b9E33F54C61487b59A1E24AF9ca83749816cF"
  ],
  "numDeployments": 2,
  "solcInputHash": "2757b3ee5b27adda4a458d8f446237e6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_platformFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum BettingContract.BetOutcome\",\"name\":\"outcome\",\"type\":\"uint8\"}],\"name\":\"BetAttested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"teamAToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"teamBToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"betToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"statement\",\"type\":\"string\"}],\"name\":\"BetCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum BettingContract.BetOutcome\",\"name\":\"outcome\",\"type\":\"uint8\"}],\"name\":\"BetParticipated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WinningsClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"approveToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamAToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamBToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"betToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"statement\",\"type\":\"string\"},{\"internalType\":\"enum BettingContract.BetOutcome\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalPool\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectedPlatformFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_teamAToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_teamBToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_betToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_statement\",\"type\":\"string\"}],\"name\":\"createBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BettingContract.sol\":\"BettingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/BettingContract.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract BettingContract is Ownable {\\n    enum BetOutcome { True, False, Stalemate }\\n\\n    struct Bet {\\n        address creator;\\n        address teamAToken;\\n        address teamBToken;\\n        address betToken;\\n        uint256 amount;\\n        string statement;\\n        BetOutcome outcome;\\n        bool isActive;\\n        mapping(address => uint256) participants;\\n        mapping(address => BetOutcome) participantOutcomes;\\n        uint256 totalPool;\\n    }\\n\\n    mapping(uint256 => Bet) public bets;\\n    uint256 public betCount;\\n    uint256 public platformFee;\\n    uint256 public collectedPlatformFees;\\n    mapping(address => bool) public approvedTokens;\\n\\n    event BetCreated(uint256 betId, address creator, address teamAToken, address teamBToken, address betToken, uint256 amount, string statement);\\n    event BetParticipated(uint256 betId, address participant, uint256 amount, BetOutcome outcome);\\n    event BetAttested(uint256 betId, BetOutcome outcome);\\n    event WinningsClaimed(uint256 betId, address winner, uint256 amount);\\n    event StakeReturned(uint256 betId, address participant, uint256 amount);\\n    event PlatformFeeWithdrawn(address to, uint256 amount);\\n    event TokenApproved(address token);\\n    event TokenRemoved(address token);\\n\\n    constructor(uint256 _platformFee) {\\n        platformFee = _platformFee;\\n\\n        // add known fan token addresses on Spicy\\n        approvedTokens[0x44B190D30198F2E585De8974999a28f5c68C6E0F] = true; // AFC\\n        approvedTokens[0x66F80ddAf5ccfbb082A0B0Fae3F21eA19f6B88ef] = true; // CITY\\n        approvedTokens[0x9B9C9AAa74678FcF4E1c76eEB1fa969A8E7254f8] = true; // SPUR\\n        approvedTokens[0x7F73C50748560BD2B286a4c7bF6a805cFb6f735d] = true; // BAR\\n        approvedTokens[0xb0Fa395a3386800658B9617F90e834E2CeC76Dd3] = true; // PSG\\n        approvedTokens[0x8DBe49c4Dcde110616fafF53b39270E1c48F861a] = true; // NAP\\n        approvedTokens[0x945EeD98f5CBada87346028aD0BeE0eA66849A0e] = true; // JUV\\n        approvedTokens[0x641d040dB51398Ba3a4f2d7839532264EcdCc3aE] = true; // ACM\\n\\n    }\\n\\n    function approveToken(address _tokenAddress) public onlyOwner {\\n        require(_tokenAddress != address(0), \\\"Token address cannot be zero address\\\");\\n        approvedTokens[_tokenAddress] = true;\\n        emit TokenApproved(_tokenAddress);\\n    }\\n\\n    function removeToken(address _tokenAddress) public onlyOwner {\\n        require(approvedTokens[_tokenAddress], \\\"Token not approved\\\");\\n        approvedTokens[_tokenAddress] = false;\\n        emit TokenRemoved(_tokenAddress);\\n    }\\n\\n    function createBet(address _teamAToken, address _teamBToken, address _betToken, uint256 _amount, string memory _statement) public payable {\\n        require(msg.value >= platformFee, \\\"Insufficient platform fee\\\");\\n        require(_teamAToken != address(0) && _teamBToken != address(0), \\\"Invalid token address!\\\");\\n        require(approvedTokens[_betToken], \\\"Bet token not approved\\\");\\n\\n        collectedPlatformFees += platformFee;\\n\\n        betCount++;\\n        Bet storage newBet = bets[betCount];\\n        newBet.creator = msg.sender;\\n        newBet.teamAToken = _teamAToken;\\n        newBet.teamBToken = _teamBToken;\\n        newBet.betToken = _betToken;\\n        newBet.amount = _amount;\\n        newBet.statement = _statement;\\n        newBet.isActive = true;\\n        newBet.totalPool = 0;\\n\\n        IERC20 token = IERC20(_betToken);\\n        require(token.transferFrom(msg.sender, address(this), _amount), \\\"Transfer failed\\\");\\n\\n        emit BetCreated(betCount, msg.sender, _teamAToken, _teamBToken, _betToken, _amount, _statement);\\n    }\\n}\\n\",\"keccak256\":\"0x2c519826a4ad73890f13f552679a19c4a08622e83e95ad791a57f7bdf34e4f24\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f26380380610f2683398101604081905261002f916101fe565b610038336101ae565b60035560056020527f01c421d477367eb6aac8e64571bfc39f3b7f5341b37c68901dcf539aa1ccfb948054600160ff1991821681179092557fbf5786cffeb3e3d0307c82dbdbe2997e7f5dcf43deb8b382cb4ec907c0aba1b280548216831790557f9565155c9887d117b8ca2bbc7e1aebab92138ba2886f6df28545d5b0ad935e5680548216831790557fc0d35edbe29491f8370384bbe2545e9ed0a3649a9d479dd4a9dafcf2a38f59f580548216831790557f6d477e561d2ff902769ea9d49a8e5f3e114d7a1bd16b818d3bd209baffc046a680548216831790557f7c64cf948ff500cbcee46138ebb767538c1f219a96e8fb6d3b6cd4490081345980548216831790557f8025c6388ff73aeaf407a62e01986fc4f412c760844bee45e9734a5a1785a8a1805482168317905573641d040db51398ba3a4f2d7839532264ecdcc3ae6000527f2e94df2ce1266ef8d30d0951378cad1636caaf8a24a834b16cf0ae0d77504ce380549091169091179055610217565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561021057600080fd5b5051919050565b610d00806102266000396000f3fe60806040526004361061009c5760003560e01c806380b2edd81161006457806380b2edd81461017a5780638da5cb5b1461019a578063ac533642146101c2578063ccf0fbd6146101d8578063cf094497146101eb578063f2fde38b1461020157600080fd5b806322af00fa146100a157806326232a2e146100df5780635fa7b584146101035780636d1ea3fa14610125578063715018a614610165575b600080fd5b3480156100ad57600080fd5b506100c16100bc36600461089b565b610221565b6040516100d6999897969594939291906108fa565b60405180910390f35b3480156100eb57600080fd5b506100f560035481565b6040519081526020016100d6565b34801561010f57600080fd5b5061012361011e36600461099c565b61030c565b005b34801561013157600080fd5b5061015561014036600461099c565b60056020526000908152604090205460ff1681565b60405190151581526020016100d6565b34801561017157600080fd5b506101236103ce565b34801561018657600080fd5b5061012361019536600461099c565b6103e2565b3480156101a657600080fd5b506000546040516001600160a01b0390911681526020016100d6565b3480156101ce57600080fd5b506100f560045481565b6101236101e63660046109d4565b6104a0565b3480156101f757600080fd5b506100f560025481565b34801561020d57600080fd5b5061012361021c36600461099c565b610778565b60016020819052600091825260409091208054918101546002820154600383015460048401546005850180546001600160a01b0397881697958616969486169590931693919261027090610ac1565b80601f016020809104026020016040519081016040528092919081815260200182805461029c90610ac1565b80156102e95780601f106102be576101008083540402835291602001916102e9565b820191906000526020600020905b8154815290600101906020018083116102cc57829003601f168201915b505050506006830154600990930154919260ff8082169361010090920416915089565b6103146107f1565b6001600160a01b03811660009081526005602052604090205460ff166103765760405162461bcd60e51b8152602060048201526012602482015271151bdad95b881b9bdd08185c1c1c9bdd995960721b60448201526064015b60405180910390fd5b6001600160a01b038116600081815260056020908152604091829020805460ff1916905590519182527f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd391015b60405180910390a150565b6103d66107f1565b6103e0600061084b565b565b6103ea6107f1565b6001600160a01b03811661044c5760405162461bcd60e51b8152602060048201526024808201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f206164646044820152637265737360e01b606482015260840161036d565b6001600160a01b038116600081815260056020908152604091829020805460ff1916600117905590519182527f5f5916d70d5479c1795a9d461360dfa5c673bc37904c8ab4fcbdc970b9e90f3d91016103c3565b6003543410156104f25760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420706c6174666f726d2066656500000000000000604482015260640161036d565b6001600160a01b0385161580159061051257506001600160a01b03841615155b6105575760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420746f6b656e20616464726573732160501b604482015260640161036d565b6001600160a01b03831660009081526005602052604090205460ff166105b85760405162461bcd60e51b815260206004820152601660248201527510995d081d1bdad95b881b9bdd08185c1c1c9bdd995960521b604482015260640161036d565b600354600460008282546105cc9190610b11565b9091555050600280549060006105e183610b2a565b90915550506002805460009081526001602081905260409091208054336001600160a01b0319918216178255918101805483166001600160a01b038a81169190911790915592810180548316888516179055600381018054909216928616929092179055600481018390556005810161065a8382610b92565b5060068101805461ff001916610100179055600060098201556040516323b872dd60e01b81523360048201523060248201526044810184905284906001600160a01b038216906323b872dd906064016020604051808303816000875af11580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec9190610c52565b61072a5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161036d565b7fd441d25aa28814f71847f48d3f10b330ca296ceea4a8b81ebb4dd01ca1b99eba6002543389898989896040516107679796959493929190610c74565b60405180910390a150505050505050565b6107806107f1565b6001600160a01b0381166107e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161036d565b6107ee8161084b565b50565b6000546001600160a01b031633146103e05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156108ad57600080fd5b5035919050565b6000815180845260005b818110156108da576020818501810151868301820152016108be565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038a8116825289811660208301528881166040830152871660608201526080810186905261012060a0820181905260009061093e838201886108b4565b9150506003851061095f57634e487b7160e01b600052602160045260246000fd5b60c082019490945291151560e0830152610100909101529695505050505050565b80356001600160a01b038116811461099757600080fd5b919050565b6000602082840312156109ae57600080fd5b6109b782610980565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a086880312156109ec57600080fd5b6109f586610980565b9450610a0360208701610980565b9350610a1160408701610980565b925060608601359150608086013567ffffffffffffffff80821115610a3557600080fd5b818801915088601f830112610a4957600080fd5b813581811115610a5b57610a5b6109be565b604051601f8201601f19908116603f01168101908382118183101715610a8357610a836109be565b816040528281528b6020848701011115610a9c57600080fd5b8260208601602083013760006020848301015280955050505050509295509295909350565b600181811c90821680610ad557607f821691505b602082108103610af557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610b2457610b24610afb565b92915050565b600060018201610b3c57610b3c610afb565b5060010190565b601f821115610b8d57600081815260208120601f850160051c81016020861015610b6a5750805b601f850160051c820191505b81811015610b8957828155600101610b76565b5050505b505050565b815167ffffffffffffffff811115610bac57610bac6109be565b610bc081610bba8454610ac1565b84610b43565b602080601f831160018114610bf55760008415610bdd5750858301515b600019600386901b1c1916600185901b178555610b89565b600085815260208120601f198616915b82811015610c2457888601518255948401946001909101908401610c05565b5085821015610c425787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610c6457600080fd5b815180151581146109b757600080fd5b8781526001600160a01b038781166020830152868116604083015285811660608301528416608082015260a0810183905260e060c08201819052600090610cbd908301846108b4565b999850505050505050505056fea2646970667358221220e49c13312309f94dd7e983efe2114fcb832ca35c451917ff87c1bebb0346d6c864736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c806380b2edd81161006457806380b2edd81461017a5780638da5cb5b1461019a578063ac533642146101c2578063ccf0fbd6146101d8578063cf094497146101eb578063f2fde38b1461020157600080fd5b806322af00fa146100a157806326232a2e146100df5780635fa7b584146101035780636d1ea3fa14610125578063715018a614610165575b600080fd5b3480156100ad57600080fd5b506100c16100bc36600461089b565b610221565b6040516100d6999897969594939291906108fa565b60405180910390f35b3480156100eb57600080fd5b506100f560035481565b6040519081526020016100d6565b34801561010f57600080fd5b5061012361011e36600461099c565b61030c565b005b34801561013157600080fd5b5061015561014036600461099c565b60056020526000908152604090205460ff1681565b60405190151581526020016100d6565b34801561017157600080fd5b506101236103ce565b34801561018657600080fd5b5061012361019536600461099c565b6103e2565b3480156101a657600080fd5b506000546040516001600160a01b0390911681526020016100d6565b3480156101ce57600080fd5b506100f560045481565b6101236101e63660046109d4565b6104a0565b3480156101f757600080fd5b506100f560025481565b34801561020d57600080fd5b5061012361021c36600461099c565b610778565b60016020819052600091825260409091208054918101546002820154600383015460048401546005850180546001600160a01b0397881697958616969486169590931693919261027090610ac1565b80601f016020809104026020016040519081016040528092919081815260200182805461029c90610ac1565b80156102e95780601f106102be576101008083540402835291602001916102e9565b820191906000526020600020905b8154815290600101906020018083116102cc57829003601f168201915b505050506006830154600990930154919260ff8082169361010090920416915089565b6103146107f1565b6001600160a01b03811660009081526005602052604090205460ff166103765760405162461bcd60e51b8152602060048201526012602482015271151bdad95b881b9bdd08185c1c1c9bdd995960721b60448201526064015b60405180910390fd5b6001600160a01b038116600081815260056020908152604091829020805460ff1916905590519182527f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd391015b60405180910390a150565b6103d66107f1565b6103e0600061084b565b565b6103ea6107f1565b6001600160a01b03811661044c5760405162461bcd60e51b8152602060048201526024808201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f206164646044820152637265737360e01b606482015260840161036d565b6001600160a01b038116600081815260056020908152604091829020805460ff1916600117905590519182527f5f5916d70d5479c1795a9d461360dfa5c673bc37904c8ab4fcbdc970b9e90f3d91016103c3565b6003543410156104f25760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420706c6174666f726d2066656500000000000000604482015260640161036d565b6001600160a01b0385161580159061051257506001600160a01b03841615155b6105575760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420746f6b656e20616464726573732160501b604482015260640161036d565b6001600160a01b03831660009081526005602052604090205460ff166105b85760405162461bcd60e51b815260206004820152601660248201527510995d081d1bdad95b881b9bdd08185c1c1c9bdd995960521b604482015260640161036d565b600354600460008282546105cc9190610b11565b9091555050600280549060006105e183610b2a565b90915550506002805460009081526001602081905260409091208054336001600160a01b0319918216178255918101805483166001600160a01b038a81169190911790915592810180548316888516179055600381018054909216928616929092179055600481018390556005810161065a8382610b92565b5060068101805461ff001916610100179055600060098201556040516323b872dd60e01b81523360048201523060248201526044810184905284906001600160a01b038216906323b872dd906064016020604051808303816000875af11580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec9190610c52565b61072a5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161036d565b7fd441d25aa28814f71847f48d3f10b330ca296ceea4a8b81ebb4dd01ca1b99eba6002543389898989896040516107679796959493929190610c74565b60405180910390a150505050505050565b6107806107f1565b6001600160a01b0381166107e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161036d565b6107ee8161084b565b50565b6000546001600160a01b031633146103e05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156108ad57600080fd5b5035919050565b6000815180845260005b818110156108da576020818501810151868301820152016108be565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038a8116825289811660208301528881166040830152871660608201526080810186905261012060a0820181905260009061093e838201886108b4565b9150506003851061095f57634e487b7160e01b600052602160045260246000fd5b60c082019490945291151560e0830152610100909101529695505050505050565b80356001600160a01b038116811461099757600080fd5b919050565b6000602082840312156109ae57600080fd5b6109b782610980565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a086880312156109ec57600080fd5b6109f586610980565b9450610a0360208701610980565b9350610a1160408701610980565b925060608601359150608086013567ffffffffffffffff80821115610a3557600080fd5b818801915088601f830112610a4957600080fd5b813581811115610a5b57610a5b6109be565b604051601f8201601f19908116603f01168101908382118183101715610a8357610a836109be565b816040528281528b6020848701011115610a9c57600080fd5b8260208601602083013760006020848301015280955050505050509295509295909350565b600181811c90821680610ad557607f821691505b602082108103610af557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610b2457610b24610afb565b92915050565b600060018201610b3c57610b3c610afb565b5060010190565b601f821115610b8d57600081815260208120601f850160051c81016020861015610b6a5750805b601f850160051c820191505b81811015610b8957828155600101610b76565b5050505b505050565b815167ffffffffffffffff811115610bac57610bac6109be565b610bc081610bba8454610ac1565b84610b43565b602080601f831160018114610bf55760008415610bdd5750858301515b600019600386901b1c1916600185901b178555610b89565b600085815260208120601f198616915b82811015610c2457888601518255948401946001909101908401610c05565b5085821015610c425787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610c6457600080fd5b815180151581146109b757600080fd5b8781526001600160a01b038781166020830152868116604083015285811660608301528416608082015260a0810183905260e060c08201819052600090610cbd908301846108b4565b999850505050505050505056fea2646970667358221220e49c13312309f94dd7e983efe2114fcb832ca35c451917ff87c1bebb0346d6c864736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/BettingContract.sol:BettingContract",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 256,
        "contract": "contracts/BettingContract.sol:BettingContract",
        "label": "bets",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Bet)251_storage)"
      },
      {
        "astId": 258,
        "contract": "contracts/BettingContract.sol:BettingContract",
        "label": "betCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 260,
        "contract": "contracts/BettingContract.sol:BettingContract",
        "label": "platformFee",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 262,
        "contract": "contracts/BettingContract.sol:BettingContract",
        "label": "collectedPlatformFees",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 266,
        "contract": "contracts/BettingContract.sol:BettingContract",
        "label": "approvedTokens",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(BetOutcome)222": {
        "encoding": "inplace",
        "label": "enum BettingContract.BetOutcome",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_enum(BetOutcome)222)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum BettingContract.BetOutcome)",
        "numberOfBytes": "32",
        "value": "t_enum(BetOutcome)222"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Bet)251_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct BettingContract.Bet)",
        "numberOfBytes": "32",
        "value": "t_struct(Bet)251_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Bet)251_storage": {
        "encoding": "inplace",
        "label": "struct BettingContract.Bet",
        "members": [
          {
            "astId": 224,
            "contract": "contracts/BettingContract.sol:BettingContract",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 226,
            "contract": "contracts/BettingContract.sol:BettingContract",
            "label": "teamAToken",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 228,
            "contract": "contracts/BettingContract.sol:BettingContract",
            "label": "teamBToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 230,
            "contract": "contracts/BettingContract.sol:BettingContract",
            "label": "betToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 232,
            "contract": "contracts/BettingContract.sol:BettingContract",
            "label": "amount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 234,
            "contract": "contracts/BettingContract.sol:BettingContract",
            "label": "statement",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 237,
            "contract": "contracts/BettingContract.sol:BettingContract",
            "label": "outcome",
            "offset": 0,
            "slot": "6",
            "type": "t_enum(BetOutcome)222"
          },
          {
            "astId": 239,
            "contract": "contracts/BettingContract.sol:BettingContract",
            "label": "isActive",
            "offset": 1,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 243,
            "contract": "contracts/BettingContract.sol:BettingContract",
            "label": "participants",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 248,
            "contract": "contracts/BettingContract.sol:BettingContract",
            "label": "participantOutcomes",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_enum(BetOutcome)222)"
          },
          {
            "astId": 250,
            "contract": "contracts/BettingContract.sol:BettingContract",
            "label": "totalPool",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}